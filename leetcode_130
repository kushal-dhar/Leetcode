class Solution(object):
    def solve(self, board):
        """
        :type board: List[List[str]]
        :rtype: void Do not return anything, modify board in-place instead.
        """
        row = len(board)
        if row == 0:
            return
        col = len(board[0])
        
        i = 0
        while i < col:
            if board[0][i] == 'O':
                self.handle(board, 0, i, row, col)
            i += 1
        
        i = 1
        while i < row:
            if board[i][0] == 'O':
                self.handle(board, i, 0, row, col)
            i += 1
                
        i = 1
        while i < col:
            if board[row-1][i] == 'O':
                self.handle(board, row-1, i, row, col)
            i += 1
        
        i = 0
        while i < row-1:
            if board[i][col-1] == 'O':
                self.handle(board, i, col-1, row, col)
            i += 1
        
        i = 0
        while i < row:
            j = 0
            while j < col:
                if board[i][j] == 'Y':
                    board[i][j] = 'O'
                elif board[i][j] == 'O':
                    board[i][j] = 'X'
                j += 1
            i += 1
        return
    
    
                
    def handle(self, board, row, col, rowSize, colSize):
        if row >= rowSize or col >= colSize or row < 0 or col < 0:
            return
        if board[row][col] == 'X' or board[row][col] == 'Y':
            return
        if board[row][col] == 'O':
            board[row][col] = 'Y'
            self.handle(board, row-1, col, rowSize, colSize)
            self.handle(board, row+1, col, rowSize, colSize)
            self.handle(board, row, col-1, rowSize, colSize)
            self.handle(board, row, col+1, rowSize, colSize)
        return
            
            
        
