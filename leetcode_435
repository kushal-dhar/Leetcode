# Definition for an interval.
# class Interval(object):
#     def __init__(self, s=0, e=0):
#         self.start = s
#         self.end = e

class Solution(object):
    def eraseOverlapIntervals(self, intervals):
        """
        :type intervals: List[Interval]
        :rtype: int
        """
        # https://leetcode.com/problems/non-overlapping-intervals/solution/
        # Approach 4
        if len(intervals) < 2:
            return 0
        
        intervals.sort(key = lambda x:x.start)
        prev = 0
        count = 0
        
        for i in range(1, len(intervals)):
            if intervals[i].start < intervals[prev].end:
                if intervals[i].end < intervals[prev].end:
                    prev = i
                count += 1
            else:
                prev = i
        
        return count
