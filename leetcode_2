# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        if not l1:
            return l2
        if not l2:
            return l1
        carry = 0
        head, curr = None, None
        while l1 and l2:
            val = l1.val + l2.val + carry
            if val >= 10:
                carry = 1
                val %= 10
            else:
                carry = 0
            temp = ListNode(val)
            if not head:
                head = temp
                curr = temp
            else:
                curr.next = temp
                curr = temp
            l1 = l1.next
            l2 = l2.next
        print curr
        while l1:
            val = l1.val + carry
            if val >= 10:
                carry = 1
                val %= 10
            else:
                carry = 0
            temp = ListNode(val)
            curr.next = temp
            curr = temp
            l1 = l1.next
            
        while l2:
            val = l2.val + carry
            if val >= 10:
                carry = 1
                val %= 10
            else:
                carry = 0
            temp = ListNode(val)
            curr.next = temp
            curr = temp
            l2 = l2.next
            
        if carry == 1:
            temp = ListNode(1)
            curr.next = temp
        
        return head
        
