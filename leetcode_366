# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def findLeaves(self, root):
        """
        :type root: TreeNode
        :rtype: List[List[int]]
        """
        if not root:
            return []
        
        res = []
        while root:
            if not root.left and not root.right:
                res.append([root.val])
                return res
            temp = []
            self.getLeaves(root, temp)
            res.append(temp)
        return res
    
    
    def getLeaves(self, root, temp):
        if not root:
            return
        if root.left:
            if not root.left.left and not root.left.right:
                temp.append(root.left.val)
                root.left = None
            else:
                self.getLeaves(root.left, temp)
        if root.right:
            if not root.right.left and not root.right.right:
                temp.append(root.right.val)
                root.right = None
            else:
                self.getLeaves(root.right, temp)
        return
