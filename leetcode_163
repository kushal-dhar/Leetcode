class Solution(object):
    def findMissingRanges(self, nums, lower, upper):
        """
        :type nums: List[int]
        :type lower: int
        :type upper: int
        :rtype: List[str]
        """
        if not nums:
            if upper == lower:
                return [str(upper)]
            else:
                return [str(lower)+"->"+str(upper)]
        res = []
        if nums[0] != lower:
            if nums[0] == lower+1:
                res.append(str(lower))
            else:
                res.append(str(lower)+"->"+str(nums[0]-1))
        
        prev = nums[0]
        i = 1
        while i < len(nums):
            curr = nums[i]
            if curr == prev+1:
                prev = curr
                i += 1
                while i < len(nums) and nums[i] == nums[i-1]:
                    i += 1
            elif curr != prev+1:
                if curr == prev+2:
                    res.append(str(prev+1))
                elif curr == prev:
                    pass
                else:
                    res.append(str(prev+1)+"->"+str(curr-1))
                prev = curr
                i += 1
                
        i -= 1
        if nums[i] != upper:
            if nums[i] == upper-1:
                res.append(str(upper))
            else:
                res.append(str(nums[i]+1)+"->"+str(upper))
        return res
                
        
            
            
