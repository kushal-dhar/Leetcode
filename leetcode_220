class Solution(object):
    def containsNearbyAlmostDuplicate(self, nums, k, t):
        """
        :type nums: List[int]
        :type k: int
        :type t: int
        :rtype: bool
        """
        # https://leetcode.com/problems/contains-duplicate-iii/solution/
        buckets = {}
        for i, num in enumerate(nums):
            #Get bucket_id and check if there exists anything in that bucket
            # if so, return true. otherwise check for elements in neighboring buckets
            # which can be <= t distance from current num.
            bucket_id = num / (t+1)
            if bucket_id in buckets:
                return True
            if bucket_id-1 in buckets:
                val = buckets[bucket_id-1]
                if num - val <= t:
                    return True
            if bucket_id + 1 in buckets:
                val = buckets[bucket_id+1]
                if val - num <= t:
                    return True      
            
            # Like a sliding window, delete the elements which are k distance away.
            buckets[bucket_id] = num
            if i >= k:
                delete_id = nums[i-k] / (t+1)
                del buckets[delete_id]
                    
            
        
        return False
            
            
        
