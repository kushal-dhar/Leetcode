class Solution(object):
    def kthGrammar(self, N, K):
        """
        :type N: int
        :type K: int
        :rtype: int
        """
        '''
        if N == 1:
            return 0
        res = '01'
        i = 1
        while i < N:
            #temp = res
            half = len(res)/2
            res = res + res[half:] + res[:half]
            i += 1
        
        return int(res[K-1])
        '''
        
        # https://leetcode.com/problems/k-th-symbol-in-grammar/discuss/113710/Python-simple-solution-to-understand-with-explanations
        if N == 1:
            if K == 1:
                return 0
            else:
                return 1
        
        half = 2 ** (N-1)
        if K <= half:
            res = self.kthGrammar(N-1, K)
            return res
        else:
            res = self.kthGrammar(N-1, K-half)
            if res == 0:
                return 1
            return 0
        
            
        
