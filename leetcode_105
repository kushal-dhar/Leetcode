# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def buildTree(self, preorder, inorder):
        """
        :type preorder: List[int]
        :type inorder: List[int]
        :rtype: TreeNode
        """
        if not preorder or not inorder:
            return []
        root = TreeNode(preorder[0])
        pos = inorder.index(preorder[0])
        self.index = 1
        root.left = self.genTree(preorder, inorder[:pos])
        root.right = self.genTree(preorder, inorder[pos+1:])
        return root
    
    def genTree(self, preorder, inorder):
        if not inorder:
            return None
        
        root = TreeNode(preorder[self.index])
        pos = inorder.index(preorder[self.index])
        self.index += 1
        root.left = self.genTree(preorder, inorder[:pos])
        root.right = self.genTree(preorder, inorder[pos+1:])
        return root
