class Solution(object):
    def combinationSum3(self, k, n):
        """
        :type k: int
        :type n: int
        :rtype: List[List[int]]
        """
        nums = [i for i in range(1,10)]
        res = []
        self.dfs(nums, [], res, 0, 0, k, n)
        return res
    
    def dfs(self, nums, temp, res, index, count, k, n):
        if n == 0 and count != k:
            return
        elif n == 0 and count == k:
            res.append(temp)
            return
        
        for i in range(index, 9):
            if nums[i] <= n:
                self.dfs(nums, temp+[nums[i]], res, i+1, count+1, k, n-nums[i])
        return
        
