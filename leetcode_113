# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def pathSum(self, root, sum):
        """
        :type root: TreeNode
        :type sum: int
        :rtype: List[List[int]]
        """
        if not root:
            return []
        res = []
        self.findPath(root, [root.val], res, sum)
        #self.findPath(root.right, [root.val], res, sum)
        return res
    
    def findPath(self, root, temp, res, total):
        total -= root.val
        if total == 0 and root.left == None and root.right == None:
            res.append(temp)
            return
            
        if root.left:
            self.findPath(root.left, temp+[root.left.val], res, total)
        if root.right:
            self.findPath(root.right, temp+[root.right.val], res, total)
        return
                
        
