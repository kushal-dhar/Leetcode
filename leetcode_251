class Vector2D(object):

    def __init__(self, vec2d):
        """
        Initialize your data structure here.
        :type vec2d: List[List[int]]
        """
        self.vec = vec2d[:]
        self.rowPos = 0
        self.colPos = 0
        self.row = len(vec2d)
        

    def next(self):
        """
        :rtype: int
        """
        val = self.vec[self.rowPos][self.colPos]
        self.colPos += 1
        return val
        

    def hasNext(self):
        """
        :rtype: bool
        """
        if self.rowPos < self.row and self.colPos < len(self.vec[self.rowPos]):
            return True
        if self.rowPos == self.row:
            return False
        if self.colPos == len(self.vec[self.rowPos]):
            self.rowPos += 1
            self.colPos = 0
            while self.rowPos < self.row and len(self.vec[self.rowPos]) == 0:
                self.rowPos += 1            
            if self.rowPos < self.row and self.colPos < len(self.vec[self.rowPos]):
                return True
            return False
        

# Your Vector2D object will be instantiated and called as such:
# i, v = Vector2D(vec2d), []
# while i.hasNext(): v.append(i.next())
