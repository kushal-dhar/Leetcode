class Solution(object):
    def minSwap(self, A, B):
        """
        :type A: List[int]
        :type B: List[int]
        :rtype: int
        """
        #http://buttercola.blogspot.com/2018/04/leetcode-801-minimum-swaps-to-make.html
        size = len(A)
        keep = [sys.maxint] * size
        swap = [sys.maxint] * size
        keep[0] = 0
        swap[0] = 1
        
        for i in range(1, size):
            if A[i] > A[i-1] and B[i] > B[i-1]:
                keep[i] = keep[i-1]
                swap[i] = swap[i-1]+1
            if A[i] > B[i-1] and B[i] > A[i-1]:
                keep[i] = min(keep[i], swap[i-1])
                swap[i] = min(swap[i], keep[i-1]+1)
                
        return min(keep[size-1], swap[size-1])
                
        
