# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def verticalOrder(self, root):
        """
        :type root: TreeNode
        :rtype: List[List[int]]
        """
        if not root:
            return []
        dic = collections.defaultdict(list)
        level = 0
        queue = [(root, level)]
        while queue:
            size = len(queue)
            while size > 0:
                node, level = queue.pop(0)
                dic[level].append(node.val)
                if node.left:
                    queue.append((node.left, level-1))
                if node.right:
                    queue.append((node.right, level+1))
                size -= 1                            
        
        res = []
        for key in sorted(dic.keys()):
            res.append(dic[key])
        return res
