# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def longestUnivaluePath(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        # [5,4,5,4,4,1,1,4,1,4,1,1,null,null,null,1,null,null,null,1,null,1]
        if not root or (not root.left and not root.right):
            return 0
        
        self.res = 0
        
        lval = self.getCount(root.left)
        rval = self.getCount(root.right)
        left, right = 0, 0
        if root.left and root.val == root.left.val:
            left = lval + 1
        if root.right and root.val == root.right.val:
            right = rval + 1
            
        self.res = max(self.res, left + right)
        return self.res
    
    
    def getCount(self, root):
        if not root or (not root.left and not root.right):
            return 0        
        
        lval = self.getCount(root.left)
        rval = self.getCount(root.right)
        left, right = 0, 0
        if root.left and root.val == root.left.val:
            left = lval + 1
        if root.right and root.val == root.right.val:
            right = rval + 1
            
        self.res = max(self.res, left + right)
        return max(left, right)   
            
        
        
