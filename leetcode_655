# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def printTree(self, root):
        """
        :type root: TreeNode
        :rtype: List[List[str]]
        """
        if not root:
            return []
        
        if not root.left and not root.right:
            return [[str(root.val)]]
        
        height = self.getHeight(root)
        leaf = 2**height - 1
        res = [["" for i in range(leaf)] for i in range(height)]
        level = 0
        res[level][len(res[level])/2] = str(root.val)
        self.printArray(root.left, res, level+1, 0, leaf/2)
        self.printArray(root.right, res, level+1, leaf/2+1, leaf)
        return res
    
    
    def printArray(self, root, res, level, left, right):
        if not root:
            return
        
        pos = (left + right)/2
        res[level][pos] = str(root.val)
        level += 1
        
        self.printArray(root.left, res, level, left, pos)
        self.printArray(root.right, res, level, pos+1, right)
        return
    
        
        
    def getHeight(self, root):
        if not root:
            return 0
        
        lval = self.getHeight(root.left)
        rval = self.getHeight(root.right)
        return max(lval, rval) + 1
