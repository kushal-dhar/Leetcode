# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def addOneRow(self, root, v, d):
        """
        :type root: TreeNode
        :type v: int
        :type d: int
        :rtype: TreeNode
        """
        if d == 1:
            node = TreeNode(v)
            node.left = root
            return node
        
        self.addRow(root, v, d-1)
        return root
    
    
    def addRow(self, root, v, level):
        if not root:
            return
        if level == 1:
            leftNode = TreeNode(v)
            leftNode.left = root.left
            root.left = leftNode
            
            rightNode = TreeNode(v)
            rightNode.right = root.right
            root.right = rightNode
            return
        
        if root.left == None and level == 1:
            leftNode = TreeNode(v)
            leftNode.left = root.left
            root.left = leftNode
        else:
            self.addRow(root.left, v, level-1)
        if root.right == None and level == 1:
            rightNode = TreeNode(v)
            rightNode.right = root.right
            root.right = rightNode
        else:
            self.addRow(root.right, v, level-1)
        return
        
