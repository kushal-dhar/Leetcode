# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def inorderSuccessor(self, root, p):
        """
        :type root: TreeNode
        :type p: TreeNode
        :rtype: TreeNode
        """
        if not root:
            return None
        
        stack = []
        curr = root
        # Store all the elements bigger than p in the stack
        while curr != p:
            if curr.val < p.val:
                curr = curr.right
            elif curr.val > p.val:
                stack.append(curr)
                curr = curr.left
        
        # If the element being looked for is not the leaf element, then go to the next smallest element in its right children
        if curr.right:
            curr = curr.right
            while curr:
                stack.append(curr)
                curr = curr.left
        if not stack:
            return None
        return stack.pop()
        
