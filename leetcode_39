class Solution(object):
    def combinationSum(self, candidates, target):
        """
        :type candidates: List[int]
        :type target: int
        :rtype: List[List[int]]
        """
        if not candidates:
            return []
        
        candidates.sort()
        res = []
        self.dfs(candidates, [], res, target, 0)
        return res
    
    def dfs(self, candidates, temp, res, target, pos):
        if target == 0:
            res.append(temp)
            return
        
        while pos < len(candidates):
            if candidates[pos] <= target:
                self.dfs(candidates, temp+[candidates[pos]], res, target-candidates[pos], pos)
            pos += 1
            while pos < len(candidates) and candidates[pos] == candidates[pos-1]:
                pos += 1
        return
        
